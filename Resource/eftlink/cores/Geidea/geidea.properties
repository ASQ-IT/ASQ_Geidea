#######################################################################################################
#    Description : Contains Geidea payment gateway properties.
#    Created By  : VP
 
#    VERSION     MODIFIED BY               (MM/DD/YY)      Description
#######################################################################################################
#    1.0         VP                        12/30/24       Initial version
#######################################################################################################

# Geidea communication port

geidea.tid=63290139
geidea.mode=USB
geidea.port=COM11
geidea.baudrate=38400
geidea.paritybits=0
geidea.databits=8
geidea.stopbits=1
geidea.terminal.printing.enabled=0

# environment: Test or Live
geidea.environment = Test

# The name of the Integrator POS, (optional, symbolic name of the actual POS, like "POS123")
pos.name =

# The address of the PED (ip address or serial address)
ped.address =

# The symbolic name of the PED
ped.name =

# unique merchant reference - this is used to identify the POS/Store
merchant.reference =

# merchant reference format - replaces the merchant.reference with a dynamically generated merchant reference. default is R (uses existing ref)
#valid substitutions are:
#  R  - Use existing Merchant Reference		eg R
#  S  - StoreID		    					eg SSSSSS		(min 3, max 10 chars, left 0 filled)
#  W  - WorkStation id  					eg WWWWWW		(min 3, max 20 chars, left 0 filled)
#  YY - Year								eg YY or YYYY	(extracted from POSTimeStamp)
#  MM - Month								eg MM			(extracted from POSTimeStamp)
#  DD - Day             					eg DD			(extracted from POSTimeStamp)
#  hh - Hour								eg hh			(extracted from POSTimeStamp)		
#  mm - Minute								eg mm			(extracted from POSTimeStamp)
#  ss - Second								eg ss			(extracted from POSTimeStamp)
#  T  - Transaction no  					eg TTTTTT		(min 3, max 20 chars, left 0 filled)
#  d  - Transaction date                    eg dddddddddd 	(must be 10 chars)

#The following special characters are also allowed:
#     -_.
#Example format:
#     R-dddddddddd-SSSSSS.WWWWWW.YYYYMMDD.hhmmss.TTTTTT
merchant.reference.format =

# turn on/off POS combine receipt
combine.receipt = false
# when combine receipt is true, set which line to suppress
combine.receipt.suppress.lines =
# when combine receipt is true, set what line to suppress when strings are matched
combine.receipt.suppress.strings =

# Overrides POS ID from the POS with a specific ID rather than using POS supplied ID. This is required when EFTLink is running multiplexing or in PEDPool mode. Note that the value needs to be the same across all instances hosted in the multiplexer unless otherwise stated by . 
pos.id.override =

# Response timeout after card inserted event was sent to POS
card.inserted.response.timeout = 1200

# cashback support options:
# off - no cashback
# pos - cashback triggered via pos
# ped - cashback triggered via ped
cashback = off

# Supported tender options:
# AskGratuity,AttendantActionHandler,BypassPin,DontPrintReceipt,EnableMagstripeFallback,Error,ForcedDecline,
# ForcedOnline,GetAdditionalData,KeyedCardDetailsHandler,KeyedEntry,NoCTLS,NoProcess,ReceiptHandler,UNKNOWN
tender.options = GetAdditionalData,ReceiptHandler,AllowPartialAuthorisation

# tokenized refund
tokenized.refund = auto

#specify whether to allow reversal of tokenized refunds. default false.
tokenized.refund.reversal = true

# true: prints only latest receipt set
# false: prints every receipt set in the print receipt callback
print.all.receiptSets = false

# additional data to be added as part of the new tender
new.tender.additional.data.0 = key_example_0=value_example_0
new.tender.additional.data.1 = key_example_1=value_example_1

#specify maximum number of attempts to initialize  library. default=1
max.attempts.init.library=1
#specify maximum number of attempts to register POS. default=1
max.attempts.init.pos=1
#specify maximum number of attempts to register PED. default=1
max.attempts.init.ped=1
#Specify timeout (in ms) of ped state refresh. default=5000 (5s)
state.refresh.timeout=5000
#Specify timeout (in ms) of pos resister. default=120000 (120s)
register.pos.timeout=120000
#Specify timeout (in ms) of ped register. default=180000 (180s)
register.ped.timeout=180000
#Specify timeout (in ms) of exit library function. default=5000 (5s)
exit.library.timeout=5000
#Specify timeout (in ms) of init library function. default=5000 (5s)
init.library.timeout=5000
#Specify timeout (in ms) of tender cancel in the event of failure. default=10000 (10s)
create.tender.cancel.timeout=10000
#Specify timeout (in ms) of special tender cancel in the event of failure. default=10000 (10s)
create.specialtender.cancel.timeout=10000
#Specify timeout (in ms) of responses to pos message display requests. default=3000 (3s)
pos.message.timeout=3000

#specify whether ped status refresh is to be attempted prior to tender operations. default=true    
refresh.ped.status=true
#specify whether tender will continue if ped status refresh fails or ped is not ready. default=false
#please note that originally the default was true, but with posjni updates this should be set to false
refresh.ped.failcontinue=false
#specify whether tender process should wait for screen updates to complete before attempting tender/refresh. default = false
refresh.ped.waitqueue=false
#specify whether when checking ped status prior to a tender operation, only the callback information is used. default = true
refresh.ped.callbackonly=true

#specify whether to include the storeID (if supplied by POS) when registering the PED. default = true.
register.ped.include.storeid = true

# specify credit debit prompt. default false
prompt.credit.debit=false

# specify credit debit prompt timeout in seconds. default 60 (60s)
prompt.credit.debit.timeout=60

# specify maximum number of installments. default is 1
max.credit.installments.number=1

# specify minimum installment value. default is 0
min.credit.installments.value=0

# specify credit installments prompt timeout in seconds. default 60 (60s)
prompt.credit.installments.timeout=60

#Specify proxy URL. No default
#proxy.url=

#When using a method of payment which is performed using a QRCode, and does not return a card pan,
#specify the default pan to be returned in the transaction. Must be numeric. Default=0000000000000000
#qrcode.default.pan=

#When using a method of payment which is performed using a QRCode, and does not return a expiry date,
#specify the expiry date to be returned in the transaction. Must be numeric. Default 0000
#qrcode.default.expiry=

#Override cardType with paymentMethod for use with CardCircuit in cardServiceResponse. default false
payment.method.override=false

#Specify whether to attempt autologon of PED following EFTLink restart. default false
auto.logon.enabled=false

#Specify maximum number of PED registration attempt to make following EFTLink restart. default 0 - no limit
# after 2 transaction attempts, no further connection attempts will be made to the PED
auto.logon.maxattempts=0

#############################
# Crypto-agility - keystore #
#############################
# When keysize is greater than 128, you may get java.security.InvalidKeyException: Illegal key size or default parameters
# You will need to download additional Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files
# and extract those files to ${java.home}/jre/lib/security/
#Algorithm Default
crypto.keygenType = AES
crypto.cipherType = AES/GCM/PKCS5Padding
crypto.keySize = 128
crypto.hashbyteSize = 384
crypto.iterations = 100000
crypto.factoryinstance = PBKDF2WithHmacSHA512
crypto.secretkeyspec = AES
crypto.keystoretype = JKS
crypto.digest = SHA-512

#Algorithm Secure setting
#crypto.keygenType = AES
#crypto.cipherType = AES/GCM/PKCS5Padding
#crypto.keySize = 128
#crypto.hashbyteSize = 384
#crypto.iterations = 100000
#crypto.factoryinstance = PBKDF2WithHmacSHA512
#crypto.secretkeyspec = AES
#crypto.keystoretype = JKS
#crypto.digest = SHA-512

#############################
#         line display      #
#############################

#specify PED type - override values returned by hardware. Set to mx925 to support line display.
#Valid values: vx680, vx820, mx900, mx925, E355, P400, V400M, V400CPLUS, VX690, P400PLUS, M400, E285
#Line display is enabled only on mx900, mx925, V400M, V400CPLUS, P400PLUS & M400
#ped.type=mx925

#enable line display (only applies to compatible devices)
ped.display.lineitems=true

#line display currency symbol
currency.symbol =SAR

#line display screen name
screen.name=virtual_receipt01.xslt

#timeout for screen update in ms. default 5000
screen.update.timeout=5000

#currency to use for gift cards
currency.default = SAR

#specify whether to allow partial tendering of giftcards. default true.
allow.gift.partial.tender=true

#############################
#     signature capture     #
#############################

#write the encoded signature to log file
#not for inclusion on deployed systems
#log.signature=false

#show electronic signature on POS device
electronic.signature=false

#Timeout for prompt on POS display to accept signature (seconds) Default = 300
card.signature.response.timeout=300

#############################
#       Void receipt        #
#############################

#Specify Additional header lines for void receipt. No defaults.
#void.header.1 = ****************
#void.header.2 = ***   VOID   ***
#void.header.3 = ****************

#Specify Additional footer lines for void receipt. No defaults.
#void.footer.1 = ****************
#void.footer.2 = ***   VOID   ***
#void.footer.3 = ****************



#Specify tender option to use for customer not present credit/debit cards. Valid options are: MOTO, KeyedEntry   Default: MOTO
CNP.tender.option=MOTO

#Specify whether to include the MERCHANT attribute on merchant receipts when sent to the POS  Default: false
identify.merchant.receipts=false

#Specify whether to include CustomerReference in tokenized refunds. Default = false
tokenized.refund.customer.reference=true

#Specify whether to use the TenderReference as the AuthorisationCode if no AuthCode is present. Default: true
tender.reference.authcode=true


######################################
#     General PayByLink Settings     #
######################################


#Admin menu timeout (in seconds).
#default 6000s (100 minutes)
maintenance.menu.timeout.seconds = 6000

# required
keystore = paybylink.keystore

#Http connect timeout (in seconds).
#default 30s.
http.connect.timeout.seconds = 30

#Abort timeout (in seconds).
#default 30s.
abort.timeout.seconds = 30


######################################
#     Adyen PayByLink Settings       #
######################################


# merchant account code, as provided by Adyen
# required
adyen.merchant.account =

# encrypted apikey, as provided by Adyen for PayByLink in the Adyen Customer Area
# encrypt the provided apikey using "oracle.eftlink.paybylink.encryption.EncryptorUtility -e <keystore name> <properties> <text to encrypt>"
# required
adyen.paybylink.apikey = 

# apikey initialization vector, as provided by the EncryptorUtility when encrypting the apikey
# required
adyen.paybylink.apikey.iv = 


######################################
#     CNP PayByLink Settings         #
######################################


#Adyen endpoint for PayByLink for customer not present transactions
#for testing purposes only, the endpoint is https://checkout-test.adyen.com/v67
#for the live endpoint, contact Adyen 
adyen.paybylink.cnp.endpoint = https://checkout-test.adyen.com/v67

#Specify response timeout from paybylink endpoint
# default 600s (10 minutes)
adyen.paybylink.cnp.response.timeout.seconds = 600

#Specify the default country code to use, when not specified in the card service request. No default
adyen.paybylink.cnp.default.country.code = 

#Specify the default shopper locale to use, when not specified in the card service request. No default
adyen.paybylink.cnp.default.shopper.locale = 

#Specify the default expiry hours for the link received from the response.
# default 24 hours. Maximum is 70 days after the creation of the link.
adyen.paybylink.cnp.default.link.expiry.hours = 24


######################################
#     CP PayByLink Settings          #
######################################


#Adyen endpoint for PayByLink for customer present transactions
#The endpoint is https://[ped ip address]/nexo. There is no default for this endpoint.
adyen.paybylink.cp.endpoint =

#Specify response timeout from paybylink local endpoint
# default 300s (5 minutes)
adyen.paybylink.cp.response.timeout.seconds = 300

#Your unique ID for the cash register.
#required for cp.
adyen.paybylink.cp.sale.id = 

#The unique ID of the terminal, in the format [device model]-[serial number]. For example, P400-123456789.
#required for cp.
adyen.paybylink.cp.POI.id = 

#Version of Adyen's Terminal API.
#required for cp.
adyen.paybylink.cp.protocol.version = 3.0

#required for cp.
adyen.paybylink.cp.adyen.crypto.version = 

# encrypted identifier, as provided by Adyen for PayByLink in the Adyen Customer Area for this PED.
# encrypt the provided identifier using "encrypt -e <keystore name> <properties>" and enter the identifier to encrypt when prompted. No default.
adyen.paybylink.cp.key.identifier = 

# passphrase initialization vector, as provided when encrypting passphrase
adyen.paybylink.cp.key.identifier.iv = 

# encrypted passphrase, as provided by Adyen for PayByLink in the Adyen Customer Area for this PED.
# encrypt the provided passphrase using "encrypt -e <keystore name> <properties>" and enter the passphrase to encrypt when prompted. No default.
adyen.paybylink.cp.key.passphrase = 

# passphrase initialization vector, as provided when encrypting passphrase
adyen.paybylink.cp.key.passphrase.iv = 

# encrypted keyversion, as provided by Adyen for PayByLink in the Adyen Customer Area for this PED.
# encrypt the provided keyversion using "encrypt -e <keystore name> <properties>" and enter the keyversion to encrypt when prompted. No default.
adyen.paybylink.cp.key.version = 

# passphrase initialization vector, as provided when encrypting passphrase
adyen.paybylink.cp.key.version.iv = 


######################################
#     Merchant Ref Settings          #
######################################


# merchant reference format - replaces the merchant.reference with a dynamically generated merchant reference. default is R (uses existing ref)
#valid substitutions are:
#  R  - Use existing Merchant Reference   eg. R
#  S  - StoreID                           eg. SSSSSS         (min 3, max 10 chars, left 0 filled)
#  W  - WorkStation id                    eg. WWWWWW         (min 3, max 20 chars, left 0 filled)
#  YY - Year                              eg. YY or YYYY     (extracted from POSTimeStamp)
#  MM - Month                             eg. MM             (extracted from POSTimeStamp)
#  DD - Day                               eg. DD             (extracted from POSTimeStamp)
#  hh - Hour                              eg. hh             (extracted from POSTimeStamp)   
#  mm - Minute                            eg. mm             (extracted from POSTimeStamp)
#  ss - Second                            eg. ss             (extracted from POSTimeStamp)
#  T  - Transaction no                    eg. TTTTTT         (min 3, max 20 chars, left 0 filled)
#  d  - Transaction date                  eg. dddddddddd     (must be 10 chars)
#  nn - Rolling number                    eg. nn             (must be 2 chars)  
#The following special characters are also allowed:
#     -_.
#Example format:
#     R-dddddddddd-SSSSSS.WWWWWW.YYYYMMDD.hhmmss.TTTTTT.nn
merchant.reference.format = R

#specify characters (in addition to -_. ) which are permitted in the merchant reference format. No default
merchant.reference.special.characters = 

# unique merchant reference - this is used to identify the POS/Store
merchant.reference = 


######################################
#     Crypto-agility - keystore      #
######################################


# When keysize is greater than 128, you may get java.security.InvalidKeyException: Illegal key size or default parameters
# You will need to download additional Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files
# and extract those files to /usr/java/jdk-11.0.17/jre/lib/security/
#Algorithm Default
crypto.keygenType=AES
crypto.cipherType=AES/GCM/PKCS5Padding
crypto.keySize=128
crypto.hashbyteSize = 384
crypto.iterations=100000
crypto.factoryinstance = PBKDF2WithHmacSHA512
crypto.secretkeyspec = AES
crypto.keystoretype = JKS
crypto.digest = SHA-512

#Algorithm Secure setting
#crypto.keygenType = AES
#crypto.cipherType = AES/GCM/PKCS5Padding
#crypto.keySize = 128
#crypto.hashbyteSize = 384
#crypto.iterations = 100000
#crypto.factoryinstance = PBKDF2WithHmacSHA512
#crypto.secretkeyspec = AES
#crypto.keystoretype = JKS
#crypto.digest = SHA-512


######################################
#     End of PayByLink Settings      #
######################################
#encoding=UTF-8
#********************************************************************
# Wrapper Java Properties
#********************************************************************

#include ../wrapper/conf/security.conf
#include ../wrapper/conf/params.conf
#include ../wrapper/conf/include-eftlink-rest-api-%WRAPPER_OS%.conf

# working directory, relative to the wrapper.exe that is used to interpret
#  all other paths (except #include directives) and used as the working
#  directory when running the application
wrapper.working.dir=../

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# These are the license details specific for eftlink-rest-api installation
wrapper.app.parameter.1=manito.eft.jettywebsocket.JettyMessagingServerStarter
wrapper.license.type=DEV
wrapper.license.id=202302030000123
wrapper.license.licensee=Oracle America, Inc.
wrapper.license.group=Retail
wrapper.license.dev_application=EFTLink Rest API
wrapper.license.features=pro, 64bit
wrapper.license.upgrade_term.begin_date=2013-01-18
wrapper.license.upgrade_term.end_date=2024-01-18
wrapper.license.key.1=a616-79b7-df12-1fb9
wrapper.license.key.2=6d40-0a3a-9e93-2129
wrapper.license.key.3=1e24-f0bb-4557-4d35
wrapper.license.key.4=5dc3-e5c6-2adb-bd62

# Configure PID and Anchor files
wrapper.anchorfile=./tmp/eftlink-rest-api.anchor
wrapper.pidfile=./tmp/eftlink-rest-api.pid
wrapper.java.pidfile=./tmp/eftlink-rest-api.java.pid

# Java Classpath (include wrapper.jar)  Add class path elements as needed starting from 1
# Do not add the plugin folder; they are assigned to the classpath dynamically in code after being loaded. This will cause only the first jar to be loaded.
wrapper.java.classpath.1=wrapper/lib/wrapper.jar
wrapper.java.classpath.2=eftlink-rest-api.jar
wrapper.java.classpath.3=eftlink.jar
wrapper.java.classpath.4=lib/*.jar

wrapper.java.additional.1=-Dlog4j.configurationFile=./eftlink-rest-api-log4j2.xml
wrapper.java.additional.2=-Dhttps.protocols=TLSv1.1,TLSv1.2
wrapper.java.additional.3=-Dlog4j2.formatMsgNoLookups=true


# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=bin


# Initial Java Heap Size (in MB)
wrapper.java.initmemory=16

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=256


#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

# Enables Debug output from the Wrapper.
# wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=NONE

# Log file to use for wrapper output logging.
wrapper.logfile=./log/eftlink-rest-api_wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=10m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=10

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************

# Title to use when running as a console
wrapper.console.title=EFTLink Rest API

# Name of the service
wrapper.name=eftlink-rest-api

# Display name of the service
wrapper.displayname=EFTLink Rest API

# Description of the service
wrapper.description=EFTLink Rest API Authorisation Server

# Do not start if the pid file already exists.
wrapper.pidfile.strict=TRUE


# set the JVM Ping Timeout to 90 (default=30); same as Xstore fixes PTS #fb210923, 214919
wrapper.ping.timeout=90

# Default JVM ping interval
wrapper.ping.interval=60

# Command file; file is monitored by the wrapper to execute commands.
wrapper.commandfile=wrapper/conf/eftlink-rest-api.command
wrapper.command.poll_interval=60

#********************************************************************
# Events
#********************************************************************
wrapper.event.default.loglevel = INFO
wrapper.event.default.command.loglevel = INFO
